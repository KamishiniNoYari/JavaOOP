/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vod;

import vod.Serial;
import vod.Produkt;
import vod.Klient;
import vod.Wlasciciel;
import java.io.FileNotFoundException;
import static java.lang.Thread.sleep;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.chart.PieChart.Data;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.ui.RefineryUtilities;
import vod.Dystrybutor;
/**
 *
 * @author Krystian
 */
public class Start extends javax.swing.JFrame {
    /**
     * Creates new form Start
     */
    private static Baza baza=new Baza();
    private static Wlasciciel wlasciciel = new Wlasciciel(-1);
    private static SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
    private volatile static int nr_produktu=0;
    private volatile static int id_uzytkownika=0;
    private static DefaultListModel<String> pomocnicza_lista_produktow = new DefaultListModel<>();       
    private static DefaultListModel<String> pomocnicza_lista_klientów = new DefaultListModel<>();
    private static DefaultListModel<String> pomocnicza_lista_dystrybutorów = new DefaultListModel<>();
    private static int ilosc_dni=0;
    private static int ilosc_dni_strat=0;
    private static Date start_symulacji;
    
    /**
     *
     * @throws ParseException
     * xxx
     * 
     */
    public Start() throws ParseException {
        this.start_symulacji = sdf.parse("29-12-2018");
        initComponents();
    }
    
    /**
     *
     * @return
     * zwraca bazę 
     */
    public static Baza giveInfo()
    {
        return baza;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        quit = new javax.swing.JButton();
        start = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Produkty = new javax.swing.JList<>();
        Produkty_title = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Dystrybutorzy = new javax.swing.JList<>();
        title_2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Klienci = new javax.swing.JList<>();
        Klient_Title = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        Dodaj = new javax.swing.JButton();
        Sprawdz = new javax.swing.JButton();
        Info = new javax.swing.JButton();
        Info_2 = new javax.swing.JButton();
        Szukajka = new javax.swing.JTextField();
        Szukaj = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hajs = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        data_sym = new javax.swing.JLabel();
        Usun_d = new javax.swing.JButton();
        Usun_k = new javax.swing.JButton();
        Usun_p = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        quit.setText("QUIT");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        start.setText("START");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        title.setText("     VOxD");

        jScrollPane1.setViewportView(Produkty);

        Produkty_title.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Produkty_title.setText("Lista produktów");

        jScrollPane2.setViewportView(Dystrybutorzy);
        Dystrybutorzy.getAccessibleContext().setAccessibleName("");

        title_2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        title_2.setText("Dystrybutorzy");

        jScrollPane3.setViewportView(Klienci);

        Klient_Title.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Klient_Title.setText("Klienci");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dystrybutor", "Serial", "Film", "Livestream", "Klient" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        Dodaj.setText("Dodaj");
        Dodaj.setToolTipText("");
        Dodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodajActionPerformed(evt);
            }
        });

        Sprawdz.setText("Sprawdz");
        Sprawdz.setToolTipText("");
        Sprawdz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SprawdzActionPerformed(evt);
            }
        });

        Info.setText("Info");
        Info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoActionPerformed(evt);
            }
        });

        Info_2.setText("Info");
        Info_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Info_2ActionPerformed(evt);
            }
        });

        Szukaj.setText("Szukaj");
        Szukaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SzukajActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        jLabel1.setText("MONEY");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        jLabel2.setText("DATA");

        Usun_d.setText("Usun");
        Usun_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Usun_dActionPerformed(evt);
            }
        });

        Usun_k.setText("Usun");
        Usun_k.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Usun_kActionPerformed(evt);
            }
        });

        Usun_p.setText("Usun");
        Usun_p.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Usun_pActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Produkty_title, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(title_2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(92, 92, 92)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Info)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Usun_d))
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Sprawdz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Usun_p)))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(Klient_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Info_2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Usun_k)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Szukaj)
                            .addComponent(Szukajka, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(729, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quit, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(data_sym, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hajs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Dodaj))))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Produkty_title, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(title_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Klient_Title, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sprawdz)
                    .addComponent(Info)
                    .addComponent(Info_2)
                    .addComponent(Usun_d)
                    .addComponent(Usun_k)
                    .addComponent(Usun_p))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dodaj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hajs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(data_sym, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Szukajka, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Szukaj)
                .addGap(17, 17, 17)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(quit, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     *
     * @return
     * zwraca numer produktu w systemie
     */
    public synchronized static int getId_produktu()
    {
        return nr_produktu;               
    }

    /**
     *
     */
    public synchronized static void addId_produktu()
    {
        nr_produktu++;
    }

    /**
     *
     * @return
     * zwraca aktualną datę
     */
    public synchronized static Date getStart_symulacji()
    {
        return start_symulacji;
    }
    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_quitActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        
            
        
        
        
    }//GEN-LAST:event_startActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
   
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void DodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodajActionPerformed
    
        String wybor = (String)jComboBox1.getSelectedItem();
        
        if (wybor.equals("Dystrybutor"))
        {
            Dystrybutor x;
            (new Thread(x = new Dystrybutor(id_uzytkownika))).start();
            
            baza.dodajDystrybutora(x);
            
            pomocnicza_lista_dystrybutorów.addElement(x.getNazwa());
            
            id_uzytkownika++;
        }
        if (wybor.equals("Klient"))
        {
            Klient a;
            
            (new Thread(a= new Klient(id_uzytkownika))).start();
            
            baza.dodajKlienta(a);
            
            pomocnicza_lista_klientów.addElement(a.getNazwa());
            
            id_uzytkownika++;
                    
            
        }
        if (wybor.equals("Serial"))
        {
           
            try {
                Produkt b = new Serial(wlasciciel.getNazwa(),start_symulacji,nr_produktu);
                
                nr_produktu++;
                
                Produkt c = new Odcinek(wlasciciel.getNazwa(),1,start_symulacji,b.getNazwa(),nr_produktu,b.getCena());
                
                nr_produktu++;
                
                baza.dodajProdukt(b);
                
                baza.dodajProdukt(c);
   
                pomocnicza_lista_produktow.addElement(b.getNazwa());
                
                pomocnicza_lista_produktow.addElement(c.getNazwa());
                
                b.dodajOdcinek((Odcinek) c);
                        
                        } catch (FileNotFoundException ex) {
                Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if (wybor.equals("Film"))
        {
            try {
                Produkt b = new Film(wlasciciel.getNazwa(),nr_produktu);
                
                nr_produktu++;
                
                baza.dodajProdukt(b);
                
                pomocnicza_lista_produktow.addElement(b.getNazwa());
                        
                        } catch (FileNotFoundException ex) {
                Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if (wybor.equals("Livestream"))
        {
            try {
                
                Produkt b = new Film(wlasciciel.getNazwa(),nr_produktu);
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
        }
        
       
        
        
    }//GEN-LAST:event_DodajActionPerformed

    private void SprawdzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SprawdzActionPerformed
        String wybor = Produkty.getSelectedValue();
        
        baza.getProdukty().forEach((Produkt produkt)->
        {
            if(produkt.getNazwa().equals(wybor))
            {
                Produkt wybrany = produkt;
                ProduktInfo demo = new ProduktInfo(wybrany);
                 demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);
        demo.setDefaultCloseOperation(3);
            }
        });
        
        
           
        
        
    }//GEN-LAST:event_SprawdzActionPerformed

    private void InfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoActionPerformed
        String wybor = Dystrybutorzy.getSelectedValue();
        
        
        baza.getDystrybutorzy().forEach((Dystrybutor dystrybutor) -> {
            if(dystrybutor.getNazwa().equals(wybor))
            {
                InfoU xd;
                xd = new InfoU(dystrybutor.getId(),dystrybutor.getNazwa(),dystrybutor.getData_urodzenia(),dystrybutor.getE_mail(),dystrybutor.getStan_konta(),dystrybutor.getNumer_karty());
                xd.setVisible(true);
            }
        });
        
        
        
        
    }//GEN-LAST:event_InfoActionPerformed

    private void Info_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Info_2ActionPerformed
        String wybor = Klienci.getSelectedValue();
        
        baza.getKlienci().forEach((Klient klienci) -> {
            if(klienci.getNazwa().equals(wybor))
            {
                InfoU xd;
                xd = new InfoU(klienci.getId(),klienci.getNazwa(),klienci.getData_urodzenia(),klienci.getE_mail(),klienci.getStan_konta(),klienci.getNumer_karty());
                xd.setVisible(true);
            }
        });
        
        
    }//GEN-LAST:event_Info_2ActionPerformed

    private void SzukajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SzukajActionPerformed
        
    }//GEN-LAST:event_SzukajActionPerformed

    private void Usun_kActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Usun_kActionPerformed
        String wybor = Klienci.getSelectedValue();
        
        for(int i = 0;i<baza.getKlienci().size();i++)
        {
            if(baza.getKlienci().get(i).getNazwa().equals(wybor))
            {
                baza.getKlienci().get(i).setPrzerwanie(true);
                baza.getKlienci().remove(baza.getKlienci().get(i));
                pomocnicza_lista_klientów.removeElement(wybor);
                break;
            }
                      
        }
        
                
    }//GEN-LAST:event_Usun_kActionPerformed

    private void Usun_pActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Usun_pActionPerformed
        String wybor = Produkty.getSelectedValue();
        
        for (int i = 0;i<baza.getProdukty().size();i++)
        {
            if(baza.getProdukty().get(i).getNazwa().equals(wybor))
            {
                if(baza.getProdukty().get(i) instanceof Serial)
                {
                    for(int j = 0; j<((Serial)baza.getProdukty().get(i)).getOdcinki().size();j++)
                    {
                        pomocnicza_lista_produktow.removeElement(((Serial)baza.getProdukty().get(i)).getOdcinki().get(j).getNazwa());
                        baza.getProdukty().remove(((Serial)baza.getProdukty().get(i)).getOdcinki().get(j));
                        
                    }
                    
                }
                
                baza.getProdukty().remove(i);
            }
                      
        }
        pomocnicza_lista_produktow.removeElement(wybor);
        
        
    }//GEN-LAST:event_Usun_pActionPerformed

    private void Usun_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Usun_dActionPerformed
        String wybor = Dystrybutorzy.getSelectedValue();
        
        //chciałem tu użyć lambda expression ale collector nie nadąza usunąć wątku
        //dystrybutora i wyskakuje error chociaż on i tak nic nie zmienia
        
        for(int i = 0;i<baza.getDystrybutorzy().size();i++)
        {
            if(baza.getDystrybutorzy().get(i).getNazwa().equals(wybor))
            {
                baza.getDystrybutorzy().get(i).setPrzerwanie(true);
                baza.getDystrybutorzy().remove(baza.getKlienci().get(i));
                pomocnicza_lista_dystrybutorów.removeElement(wybor);
                break;
            }
        }
        
    }//GEN-LAST:event_Usun_dActionPerformed

    /**
     * @param args the command line arguments
     * xxx
     * @throws java.io.FileNotFoundException
     * xxx
     * @throws java.text.ParseException
     * xxx
     * @throws java.lang.InterruptedException
     * xxx
     */
    public static void main(String args[]) throws FileNotFoundException, ParseException, InterruptedException {
        
        Start program=new Start();
        
        
 
        Produkty.setModel(pomocnicza_lista_produktow);
        
        Dystrybutorzy.setModel(pomocnicza_lista_dystrybutorów);
        
        Klienci.setModel(pomocnicza_lista_klientów);
        
        long time_of_day=24*60*60*1000;
        
        //Tworzymy początkowe zasoby
        //Tworzymy wlasciciela,3 pierwszych dystrybutorów i 5 produktów wlasciciela
        //5 pierwszych klientów 
        for(int i=0;i<3;i++)
        {
            Dystrybutor x;
            (new Thread(x=new Dystrybutor(id_uzytkownika))).start();
            
            baza.dodajDystrybutora(x);
            
            pomocnicza_lista_dystrybutorów.addElement(x.getNazwa());
            
            id_uzytkownika++;
            
        }
        
        Random r=new Random();
        
        for (int i=0;i<5;i++)
        {
            
            int z =r.nextInt(2);
            
            if (z==0)
            {
                Produkt y = new Film(wlasciciel.getNazwa(),nr_produktu);
                
                baza.dodajProdukt(y);
                
                pomocnicza_lista_produktow.addElement(y.getNazwa());
                
                nr_produktu++;
            }
            
            if (z==1)
            {
                Produkt y = new Serial(wlasciciel.getNazwa(),start_symulacji,nr_produktu);
                
                baza.dodajProdukt(y);
                
                nr_produktu++;
                
                Produkt y1 = new Odcinek(wlasciciel.getNazwa(),1,start_symulacji,y.getNazwa(),nr_produktu,y.getCena());
                
                y.dodajOdcinek((Odcinek) y1);
                
                nr_produktu++;
                
                pomocnicza_lista_produktow.addElement(y.getNazwa());
                
                pomocnicza_lista_produktow.addElement(y1.getNazwa());
                
            }
            if (z==2)
            {
                Produkt y = new LiveStream(wlasciciel.getNazwa(),nr_produktu,start_symulacji);
                
                baza.dodajProdukt(y);
                
                pomocnicza_lista_produktow.addElement(y.getNazwa());
                
                nr_produktu++;
                
            }
        }
        
        for (int i=0;i<5;i++)
        {
            Klient p;
            
            (new Thread(p=new Klient(id_uzytkownika))).start();
            
            baza.dodajKlienta(p);
            
            pomocnicza_lista_klientów.addElement(p.getNazwa());
            
            id_uzytkownika++;
            
        }
        
        //Pierwsza istniejąca promocja
        
        Promocja promocja = new Promocja(start_symulacji,baza.getProdukty());
        
        
          
        
        
        //inicjalizacja elementów GUI
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            program.setVisible(true);
        });
        
        
        //tworzenie wielkiego while w którym wszystko będzie sie działo
        //wyjście z pętli nastąpi na żądanie lub gdy przez 3 miesiące będą straty
        
        while (ilosc_dni_strat<90)
        {            
            sleep(1000);
            
            //przed zakończeniem dnia baza powinna aktualizować listę produktów
            //właściciel opłaca też wszelkie dochody z umow
            //przy okazji aktualizujemy ilosc produktow w bazie
            
            double wyliczony_koszt_dzienny=baza.wyliczKoszty(start_symulacji);
            
            wlasciciel.setStraty(wyliczony_koszt_dzienny);
            
            double wyliczone_zyski = baza.wyliczZyski();
            
            wlasciciel.setZysk(wyliczone_zyski);
            
            wlasciciel.setZarobki(wyliczone_zyski-wyliczony_koszt_dzienny);
            
            wlasciciel.ustalStanKonta(wyliczone_zyski-wyliczony_koszt_dzienny);
            
            baza.aktualizacja_obejrzen(start_symulacji);
            
            if (wlasciciel.getZarobki()<=0)
            {
                ilosc_dni_strat++;
            }
            else
            {
                ilosc_dni_strat=0;
            }
            
            
            
            
            
            
            
            
            
            
            //aktualizacja wyświetlania
            
            for (int i=0;i<baza.getProdukty().size();i++)
            {
                if (!(pomocnicza_lista_produktow.contains(baza.getProdukty().get(i).getNazwa())))
                {
                    pomocnicza_lista_produktow.addElement(baza.getProdukty().get(i).getNazwa());
                }
            }
            //promocja ustawiana raz na 3 miesiące, tylko 1 obejmuje jedynie
            //filmy i livestreamy
            
            
            if(ilosc_dni%90 == 0)
            {
                promocja = new Promocja(start_symulacji,baza.getProdukty());
                
            }
            
            
            if(start_symulacji.equals(promocja.getData_za()))
            {
                promocja.przywróćCeny();
            }
            
            
            //aktualizacja daty i stanu konta
            
            ilosc_dni++;
            
            Date temp = new Date(start_symulacji.getTime() + time_of_day);
            
            start_symulacji = temp;  
            
            hajs.setText(String.valueOf(wlasciciel.getStan_konta()));
            
            data_sym.setText(String.valueOf(start_symulacji));
        }
     
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Dodaj;
    private static javax.swing.JList<String> Dystrybutorzy;
    private javax.swing.JButton Info;
    private javax.swing.JButton Info_2;
    private static javax.swing.JList<String> Klienci;
    private javax.swing.JLabel Klient_Title;
    private static javax.swing.JList<String> Produkty;
    private javax.swing.JLabel Produkty_title;
    private javax.swing.JButton Sprawdz;
    private javax.swing.JButton Szukaj;
    private javax.swing.JTextField Szukajka;
    private javax.swing.JButton Usun_d;
    private javax.swing.JButton Usun_k;
    private javax.swing.JButton Usun_p;
    private static javax.swing.JLabel data_sym;
    private static javax.swing.JLabel hajs;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton quit;
    private javax.swing.JButton start;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title_2;
    // End of variables declaration//GEN-END:variables
}
